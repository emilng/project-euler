# Highly divisible triangular number

# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

def first_triangle_num_with_n_divisors(target_num):
  num = 1
  triangle_num = 1
  divisors = 2
  while divisors < target_num:
    num = num + 1
    triangle_num = triangle_num + num
    start = 2
    end = triangle_num
    divisors = 2
    while start < end:
      if (triangle_num % start == 0):
        divisors = divisors + 2
        end = triangle_num/start
      start = start + 1
  return triangle_num

print first_triangle_num_with_n_divisors(500)